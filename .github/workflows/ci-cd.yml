name: CI/CD - Tests, Coverage & SonarQube

on:
  push:
    branches:
      - "**" # Ex√©cute le workflow sur toutes les branches
  pull_request:
    branches:
      - "**" # Ex√©cute le workflow sur toutes les PRs

jobs:
  frontend-tests:
    name: Tests et Coverage Frontend
    runs-on: ubuntu-latest

    steps:
      - name: R√©cup√©rer le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installer Node.js et Angular
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Installer les d√©pendances du front
        run: |
          cd front
          npm install

      - name: Installer Angular CLI
        run: npm install -g @angular/cli

      - name: Lancer les tests Angular avec ChromeHeadless
        run: |
          cd front
          ng test --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Publier le rapport Coverage Frontend
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/

      # Ici, nous utilisons une commande sonar-scanner pour n'analyser que le module frontend.
      - name: üîç Analyse SonarQube Frontend
        run: |
          sonar-scanner \
            -Dsonar.projectKey=AlbanFraincart_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.organization=albanfraincart \
            -Dsonar.modules=frontend \
            -Dsonar.projectBaseDir=front \
            -Dsonar.sources=src \
            -Dsonar.language=TypeScript \
            -Dsonar.java.binaries=""
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  backend-tests:
    name: Tests et Coverage Backend
    runs-on: ubuntu-latest

    steps:
      - name: R√©cup√©rer le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installer Java 11 et Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: üîß Build et Tests Backend avec Jacoco
        run: |
          cd back
          mvn clean verify

      - name: Publier le rapport Jacoco
        uses: actions/upload-artifact@v4
        with:
          name: backend-jacoco-report
          path: back/target/site/jacoco/

      - name: üîç Analyse SonarQube Backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=AlbanFraincart_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
